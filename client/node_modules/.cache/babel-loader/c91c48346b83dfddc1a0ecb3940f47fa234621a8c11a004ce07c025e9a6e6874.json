{"ast":null,"code":"var _jsxFileName = \"/Users/shreenithi/Downloads/NEW/client/src/components/singlePost/SinglePost.jsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { Context } from \"../../context/Context\";\nimport \"./singlePost.css\";\nimport ReactAudioPlayer from 'react-audio-player';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SinglePost() {\n  _s();\n  const location = useLocation();\n  const path = location.pathname.split(\"/\")[2];\n  const [post, setPost] = useState({});\n  const {\n    user\n  } = useContext(Context);\n  const [title, setTitle] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [updateMode, setUpdateMode] = useState(false);\n  useEffect(() => {\n    const getPost = async () => {\n      const res = await axios.get(`${process.env.REACT_APP_URL}/posts/` + path);\n      setPost(res.data);\n      setTitle(res.data.title);\n      setDesc(res.data.desc);\n    };\n    getPost();\n  }, [path]);\n  const handleDelete = async () => {\n    try {\n      await axios.delete(`${process.env.REACT_APP_URL}/posts/${post._id}`, {\n        data: {\n          username: user.username\n        }\n      });\n      window.location.replace(\"/\");\n    } catch (err) {}\n  };\n  const handleUpdate = async () => {\n    try {\n      await axios.put(`${process.env.REACT_APP_URL}/posts/${post._id}`, {\n        username: user.username,\n        title,\n        desc\n      });\n      setUpdateMode(false);\n    } catch (err) {}\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"singlePost\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"singlePostWrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"imgcontent\",\n        children: post.photo && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: post.photo,\n          alt: \"\",\n          className: \"singlePostImg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"audio-content\",\n        children: post.audio && /*#__PURE__*/_jsxDEV(ReactAudioPlayer, {\n          src: post.audio,\n          controls: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"afterimg\",\n        children: [updateMode ? /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: title,\n          className: \"singlePostTitleInput\",\n          autoFocus: true,\n          onChange: e => setTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"singlePostTitle\",\n          children: [title, post.username === (user === null || user === void 0 ? void 0 : user.username) && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"singlePostEdit\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"singlePostIcon far fa-edit\",\n              onClick: () => setUpdateMode(true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"singlePostIcon far fa-trash-alt\",\n              onClick: handleDelete\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"singlePostInfo\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"singlePostAuthor\",\n            children: [\"Author:\", /*#__PURE__*/_jsxDEV(Link, {\n              to: `/?user=${post.username}`,\n              className: \"link\",\n              children: /*#__PURE__*/_jsxDEV(\"b\", {\n                children: [\" \", post.username]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"singlePostDate\",\n            children: new Date(post.createdAt).toDateString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }, this), updateMode ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"singlePostDescInput\",\n            value: desc,\n            onChange: e => setDesc(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"somelink\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"https://app.inferkit.com/demo\",\n              children: \"Click here to generate text...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"singlePostDesc\",\n          children: desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), updateMode && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"singlePostButton\",\n        onClick: handleUpdate,\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(SinglePost, \"xs7JL4oKuIn8mxMMLFGIhzF2qFM=\", false, function () {\n  return [useLocation];\n});\n_c = SinglePost;\nvar _c;\n$RefreshReg$(_c, \"SinglePost\");","map":{"version":3,"names":["axios","useContext","useEffect","useState","useLocation","Link","Context","ReactAudioPlayer","SinglePost","location","path","pathname","split","post","setPost","user","title","setTitle","desc","setDesc","updateMode","setUpdateMode","getPost","res","get","process","env","REACT_APP_URL","data","handleDelete","delete","_id","username","window","replace","err","handleUpdate","put","photo","audio","e","target","value","Date","createdAt","toDateString"],"sources":["/Users/shreenithi/Downloads/NEW/client/src/components/singlePost/SinglePost.jsx"],"sourcesContent":["import axios from \"axios\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { Context } from \"../../context/Context\";\nimport \"./singlePost.css\";\nimport ReactAudioPlayer from 'react-audio-player';\n\nexport default function SinglePost() {\n  const location = useLocation();\n  const path = location.pathname.split(\"/\")[2];\n  const [post, setPost] = useState({});\n  const { user } = useContext(Context);\n  const [title, setTitle] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [updateMode, setUpdateMode] = useState(false);\n\n  useEffect(() => {\n    const getPost = async () => {\n      const res = await axios.get(`${process.env.REACT_APP_URL}/posts/` + path);\n      setPost(res.data);\n      setTitle(res.data.title);\n      setDesc(res.data.desc);\n    };\n    getPost();\n  }, [path]);\n\n  const handleDelete = async () => {\n    try {\n      await axios.delete(`${process.env.REACT_APP_URL}/posts/${post._id}`, {\n        data: { username: user.username },\n      });\n      window.location.replace(\"/\");\n    } catch (err) {}\n  };\n\n  const handleUpdate = async () => {\n    try {\n      await axios.put(`${process.env.REACT_APP_URL}/posts/${post._id}`, {\n        username: user.username,\n        title,\n        desc,\n      });\n      setUpdateMode(false)\n    } catch (err) {}\n  };\n\n  return (\n    <div className=\"singlePost\">\n      <div className=\"singlePostWrapper\">\n        <div className=\"imgcontent\">\n        {post.photo && (\n          <img src={post.photo} alt=\"\" className=\"singlePostImg\" />\n        )}\n        </div>\n        <div className=\"audio-content\">\n        {post.audio && (\n          <ReactAudioPlayer\n          src={post.audio}\n          controls\n        />\n        )}\n        </div>\n        <div className=\"afterimg\">\n        {updateMode ? (\n          <input\n            type=\"text\"\n            value={title}\n            className=\"singlePostTitleInput\"\n            autoFocus\n            onChange={(e) => setTitle(e.target.value)}\n          />\n        ) : (\n          <h1 className=\"singlePostTitle\">\n            {title}\n            {post.username === user?.username && (\n              <div className=\"singlePostEdit\">\n                <i\n                  className=\"singlePostIcon far fa-edit\"\n                  onClick={() => setUpdateMode(true)}\n                ></i>\n                <i\n                  className=\"singlePostIcon far fa-trash-alt\"\n                  onClick={handleDelete}\n                ></i>\n              </div>\n            )}\n          </h1>\n        )}\n        <div className=\"singlePostInfo\">\n          <span className=\"singlePostAuthor\">\n            Author:\n            <Link to={`/?user=${post.username}`} className=\"link\">\n              <b> {post.username}</b>\n            </Link>\n          </span>\n          <span className=\"singlePostDate\">\n            {new Date(post.createdAt).toDateString()}\n          </span>\n        </div>\n        {updateMode ? (\n          <>\n          <textarea\n            className=\"singlePostDescInput\"\n            value={desc}\n            onChange={(e) => setDesc(e.target.value)}\n          />\n          <p className=\"somelink\">\n          <a href=\"https://app.inferkit.com/demo\">Click here to generate text...</a>\n      </p>\n          </>\n          \n        ) : (\n          <p className=\"singlePostDesc\">{desc}</p>\n        )}\n        </div>\n        {updateMode && (\n          <button className=\"singlePostButton\" onClick={handleUpdate}>\n            Update\n          </button>\n        )}\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}